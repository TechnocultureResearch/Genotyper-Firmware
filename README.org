* Firmware for Genotyper

#+BEGIN_QUOTE
❗This repository uses various development dependencies for managing code formatting (clang-format, uncrustify), commit messages(husky, commitlint). 
These should be set up properly. Refer to Getting Started page on the project wiki. 
#+END_QUOTE

-----

To setup the zephyr environment with the west tool and for more details, refer to [[https://github.com/TechnocultureResearch/Genotyper-Firmware/wiki/Getting-started][Getting Started Guide]].

** Build an application

To build an application (For example, the TMP100 sensor) using the west tool, navigate to the workspace and run

*** Build

#+BEGIN_SRC bash
west build -p auto -b geno_nrf52811 samples/sensor/tmp100
#+END_SRC

- =-p= ensures a pristine (clean) build.
- =-b= is used to specify the board name.
 
*** Flash
After the build process is completed, run

#+BEGIN_SRC bash
west flash --erase
#+END_SRC

This will flash the executable file generated onto the flash memory of the target board.

*** Console
The =minicom= serial monitor is needed to view the sensor output on the console.

Run

#+BEGIN_SRC bash
minicom -D /dev/ttyACM* -b 115200
#+END_SRC

- =-D= specifies the device connected to the port.
- =-b= specifies the baudrate of transmission overriding the value mentioned in the minicom's configuration file.

-----

#+BEGIN_QUOTE
⚠️ Note:
Find the custom board files in the path `./boards/arm/` and copy it to `../zephyr/boards/arm/` along with the definitions of all other boards that zephyr provides.
Failing to do so, we get an error saying that the board definition is not found in the path where it looks for the boards which is `../zephyr/boards/arm/`.
#+END_QUOTE
